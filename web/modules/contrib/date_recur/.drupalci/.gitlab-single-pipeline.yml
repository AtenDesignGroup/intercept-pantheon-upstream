default:
  image: skpr/php-cli:${PHP_VERSION}-dev-v2-latest
  services:
    - name: mysql:${MYSQL_VERSION}
      alias: mysql

stages:
  - pre
  - build
  - lint
  - test

variables:
  # Configure mysql environment variables (https://hub.docker.com/_/mysql/)
  MYSQL_ROOT_PASSWORD: drupal
  MYSQL_DATABASE: drupal
  MYSQL_USER: drupal
  MYSQL_PASSWORD: drupal
  SIMPLETEST_DB: mysql://drupal:drupal@mysql/drupal
  SIMPLETEST_BASE_URL: http://localhost:8080
  BROWSERTEST_OUTPUT_DIRECTORY: app/sites/default/files
  BROWSERTEST_OUTPUT_FILE: test-output.html
  MINK_DRIVER_ARGS_WEBDRIVER: '["chrome", {"chromeOptions": { "args": [ "--disable-gpu", "--headless" ] } }, "http://chrome:4444/wd/hub" ]'
  SYMFONY_DEPRECATIONS_HELPER: 'ignoreFile=core/.deprecation-ignore.txt'

build app:
  stage: build
  cache:
    key: ${CI_COMMIT_REF_SLUG}-composer
    paths:
      - app/vendor/
  script:
    - mkdir -p /tmp/project
    - cp -r ${CI_PROJECT_DIR} /tmp/project/
    - git clone --depth 1 --branch ${DRUPAL_CORE_CONSTRAINT}.x https://git.drupal.org/project/drupal.git app
    - mv /tmp/project app/modules/
    - cd app
    - composer install
    - composer config --no-plugins allow-plugins.dealerdirect/phpcodesniffer-composer-installer true
    - composer config --no-plugins allow-plugins.phpstan/extension-installer true
    - composer config --unset platform.php
    - composer require rlanvin/php-rrule:${RRULE_CONSTRAINT}
    - composer require
        --with-all-dependencies
        dealerdirect/phpcodesniffer-composer-installer
        dpi/drupal-phpunit-bootstrap
        drupal/core-dev:^${DRUPAL_CORE_CONSTRAINT}
        drupal/token:'^1.5'
        mglaman/phpstan-drupal:'^1'
        micheh/phpcs-gitlab
        phpspec/prophecy-phpunit:^2
        phpstan/phpstan-deprecation-rules:'^1'
        phpstan/phpstan-strict-rules:'1.4'
        phpstan/phpstan:'^1'
        previousnext/coding-standard:'^0.1.0'
    - composer show
    - cp modules/project/date_recur/.drupalci/* .
    - mkdir -p ${BROWSERTEST_OUTPUT_DIRECTORY}
  artifacts:
    expire_in: 1 hour
    paths:
      - app/composer.lock
      - app/

phpcs:
  stage: lint
  needs: ["build app"]
  script:
    - cd app
    - vendor/bin/phpcs --standard=modules/project/date_recur/phpcs.xml --report=full --report-\\Micheh\\PhpCodeSniffer\\Report\\Gitlab=phpcs-quality-report.json modules/project/date_recur/
  dependencies:
    - build app
  artifacts:
    when: always
    reports:
      codequality: app/phpcs-quality-report.json

phpstan:
  stage: lint
  needs: ["build app"]
  script:
    - cd app
    - vendor/bin/phpstan analyse --memory-limit=2G --no-progress -c phpstan.neon modules/project/date_recur --error-format gitlab | tee report.json
    - cat report.json
  dependencies:
    - build app
  artifacts:
    when: always
    reports:
      codequality: app/report.json

test unit:
  needs: ["build app"]
  stage: test
  script:
    - cd app
    - vendor/bin/phpunit modules/project/date_recur/tests/src/Unit/ --log-junit report-unit.xml
  dependencies:
    - build app
  artifacts:
    when: always
    reports:
      junit: app/report-unit.xml

test kernel:
  needs: ["build app"]
  stage: test
  before_script:
    - cd app
    - ./wait-for-it.sh -s -t 180 mysql:3306 -- echo "MySQL is Ready"
  script:
    - vendor/bin/phpunit modules/project/date_recur/tests/src/Kernel/ --log-junit report-kernel.xml
  dependencies:
    - build app
  artifacts:
    when: always
    reports:
      junit: app/report-kernel.xml

test functional:
  needs: ["build app"]
  stage: test
  image: skpr/php-cli:${PHP_VERSION}-dev-v2-latest
  services:
    - name: mysql:${MYSQL_VERSION}
      alias: mysql
    - name: selenium/standalone-chrome:3.141.59-oxygen
      alias: chrome
  before_script:
    - cd app
    - php -S 0.0.0.0:8080 .ht.router.php >> http.log 2>&1 &
    - ./wait-for-it.sh -s -t 180 mysql:3306 -- echo "MySQL is Ready"
  script:
    - vendor/bin/phpunit modules/project/date_recur/tests/src/Functional/ --log-junit report-functional.xml
  dependencies:
    - build app
  artifacts:
    when: always
    reports:
      junit: app/report-functional.xml
    paths:
      - app/http.log
      - app/sites/simpletest/browser_output/

# Copied verbatim from
# https://git.drupalcode.org/project/gitlab_templates/-/blob/1.0.x/includes/include.drupalci.workflows.yml
workflow:
  rules:
    # These 3 rules from https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Workflows/MergeRequest-Pipelines.gitlab-ci.yml
    # Run on merge requests
    - if: $CI_MERGE_REQUEST_IID
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    # Run on tags
    - if: $CI_COMMIT_TAG
    # Run when called from an upstream pipeline https://docs.gitlab.com/ee/ci/pipelines/downstream_pipelines.html?tab=Multi-project+pipeline#use-rules-to-control-downstream-pipeline-jobs
    - if: $CI_PIPELINE_SOURCE == 'pipeline'
    - if: $CI_PIPELINE_SOURCE == 'parent-child'
    # Run on commits to the default & release branches.
    - if: ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH || $CI_COMMIT_BRANCH =~ /^[78]\.x-\d+\.x$|^[\d+.]+\.x$/) && $CI_PROJECT_ROOT_NAMESPACE == "project"
    # The last rule above blocks manual and scheduled pipelines on non-default branch. The rule below allows them:
    - if: $CI_PIPELINE_SOURCE == "schedule" && $CI_PROJECT_ROOT_NAMESPACE == "project"
    # Run if triggered from Web using 'Run Pipelines'
    - if: $CI_PIPELINE_SOURCE == "web"
    # Run if triggered from WebIDE
    - if: $CI_PIPELINE_SOURCE == "webide"
    # Dpi:
    - if: $CI_PIPELINE_SOURCE == "push"
    - if: $CI_COMMIT_BRANCH
