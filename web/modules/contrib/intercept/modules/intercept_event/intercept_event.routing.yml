
intercept_event.events_controller_list:
  path: '/events'
  defaults:
    _controller: '\Drupal\intercept_event\Controller\EventsController::list'
    _title: 'Events'
  requirements:
    _permission: 'access content'

intercept_event.account.events:
  path: '/account/events'
  defaults:
    _controller: '\Drupal\intercept_core\Controller\UserAccount::userRedirect'
    _title: 'My Events'
    route_name: 'entity.user.events'
  requirements:
    _user_is_logged_in: 'TRUE'

entity.user.events:
  path: '/user/{user}/events'
  defaults:
    _controller: '\Drupal\intercept_event\Controller\EventRegistrationController::manage'
    _title: 'My Events'
  requirements:
    _entity_access: 'user.update'
    user: \d+

entity.node.register:
  path: '/event/{node}/register'
  defaults:
    _controller: '\Drupal\intercept_event\Controller\EventRegistrationController::register'
  requirements:
    _access: 'TRUE'

entity.node.registrations:
  path: '/event/{node}/registrations'
  defaults:
    _controller: '\Drupal\intercept_event\Controller\EventsController::registrations'
  requirements:
    _custom_access: '\Drupal\intercept_event\Controller\EventsController::registrationsAccess'

entity.node.attendance:
  path: '/event/{node}/attendance'
  defaults:
    _controller: '\Drupal\intercept_event\Controller\EventsController::attendance'
  requirements:
    _custom_access: '\Drupal\intercept_event\Controller\EventsController::attendanceAccess'

entity.node.scan:
  path: '/event/{node}/checkin'
  defaults:
    _controller: '\Drupal\intercept_event\Controller\EventAttendanceController::scanForm'
    _title: 'Check-in'
  requirements:
    _entity_access: 'node.scan'
    _entity_bundle: 'event'

entity.node.scan_guest:
  path: '/event/{node}/checkin/guest'
  defaults:
    _controller: '\Drupal\intercept_event\Controller\EventAttendanceController::scanGuestForm'
    _title: 'Check-in'
  requirements:
    _entity_access: 'node.scan'

entity.node.scan_lookup:
  path: '/event/{node}/checkin/lookup'
  defaults:
    _controller: '\Drupal\intercept_event\Controller\EventAttendanceController::scanLookupForm'
    _title: 'Lookup'
  requirements:
    _entity_access: 'node.scan'

entity.node.template_preview:
  path: '/node/preview/event/{node}'
  defaults:
    _controller: 'intercept_event.manager:previewFromTemplate'
  requirements:
    _entity_access: 'node.template'

entity.node.template:
  path: '/node/add/event/{node}'
  defaults:
    _controller: 'intercept_event.manager:addFromTemplate'
  requirements:
    _entity_access: 'node.template'
  options:
    _admin_route: TRUE

entity.node.recurrence_form:
  path: '/node/{node}/recurrences'
  defaults:
    _entity_form: 'node.recurrence'
  requirements:
    _entity_access: 'node.update'
    _entity_bundle: 'event'
    _custom_access: 'intercept_event.recurring_manager:isRecurrenceBaseEvent'
    _permission: 'update any event_recurrence'

entity.node.template_form:
  path: '/event/{node}/template'
  defaults:
    _entity_form: 'node.template'
  requirements:
    _entity_access: 'node.scan'

entity.node.analysis:
  path: '/event/{node}/analysis'
  defaults:
    _controller: '\Drupal\intercept_event\Controller\EventsController::analysis'
  requirements:
    _entity_access: 'node.analysis'
    _entity_bundle: 'event'

intercept_event.api.attendance_update:
  path: '/api/attendance/update'
  methods: [POST]
  defaults:
    _controller: 'intercept_event.manager:updateAttendance'
  requirements:
    _role: 'intercept_staff + intercept_system_admin + administrator'

intercept_event.api.attendee_create:
  path: '/api/attendee/create'
  methods: [POST]
  defaults:
      _controller: 'intercept_event.manager:createAttendee'
  requirements:
      _role: 'intercept_staff + intercept_system_admin + administrator'
intercept_event.api.event.evaluate:
  path: '/api/event/evaluate'
  #/{entity_type_id}/{entity_id}/{vote_type_id}/{value}
  methods: [POST, DELETE]
  defaults:
    _controller: '\Drupal\intercept_event\Controller\EventEvaluationController::evaluate'
  requirements:
    _permission: 'update own event evaluation+update any event evaluation'

intercept_event.api.event.analysis:
  path: '/api/event/analysis'
  methods: [POST, GET]
  defaults:
    _controller: '\Drupal\intercept_event\Controller\EventEvaluationController::analysis'
  requirements:
    _permission: 'analyze events'
