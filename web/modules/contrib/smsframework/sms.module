<?php

/**
 * @file
 * Provides hooks for SMS Framework.
 */

declare(strict_types = 1);

use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Entity\ContentEntityInterface;

/**
 * Implements hook_cron().
 */
function sms_cron(): void {
  /** @var \Drupal\sms\Provider\PhoneNumberVerificationInterface $phone_number_verification */
  $phone_number_verification_provider = \Drupal::service('sms.phone_number.verification');
  $phone_number_verification_provider->purgeExpiredVerifications();

  /** @var \Drupal\sms\Provider\SmsQueueProcessorInterface $sms_queue_processor */
  $sms_queue_processor = \Drupal::service('sms.queue');
  $sms_queue_processor->processUnqueued();
  $sms_queue_processor->garbageCollection();
}

/**
 * Implements hook_entity_insert().
 */
function sms_entity_insert(EntityInterface $entity): void {
  _sms_entity_postsave($entity);
}

/**
 * Implements hook_entity_update().
 */
function sms_entity_update(EntityInterface $entity): void {
  _sms_entity_postsave($entity);
}

/**
 * Implements hook_entity_delete().
 */
function sms_entity_delete(EntityInterface $entity): void {
  if ($entity instanceof ContentEntityInterface) {
    /** @var \Drupal\sms\Provider\PhoneNumberVerificationInterface $phone_number_verification_provider */
    $phone_number_verification_provider = \Drupal::service('sms.phone_number.verification');
    $phone_number_verification_provider->deletePhoneVerificationByEntity($entity);
  }
}

/**
 * Respond to saving entities after they have been written to storage.
 *
 * @link https://www.drupal.org/node/2221347
 * @see sms_entity_insert()
 * @see sms_entity_update()
 */
function _sms_entity_postsave(EntityInterface $entity): void {
  if ($entity instanceof ContentEntityInterface) {
    /** @var \Drupal\sms\Provider\PhoneNumberVerificationInterface $phone_number_verification_provider */
    $phone_number_verification_provider = \Drupal::service('sms.phone_number.verification');
    $phone_number_verification_provider->updatePhoneVerificationByEntity($entity);
  }
}
