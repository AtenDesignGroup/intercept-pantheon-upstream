<?php

/**
 * @file
 * Provides development tools Webform module.
 */

use Drupal\Core\Hook\Attribute\LegacyHook;
use Drupal\webform_devel\Hook\WebformDevelHooks;
use Drupal\Component\Serialization\Yaml;
use Drupal\Core\Form\FormStateInterface;
use Drupal\webform\Utility\WebformYaml;

/**
 * Implements hook_webform_help_info().
 */
#[LegacyHook]
function webform_devel_webform_help_info() {
  return \Drupal::service(WebformDevelHooks::class)->webformHelpInfo();
}

/**
 * Implements hook_entity_type_alter().
 */
#[LegacyHook]
function webform_devel_entity_type_alter(array &$entity_types) {
  \Drupal::service(WebformDevelHooks::class)->entityTypeAlter($entity_types);
}

/**
 * Implements hook_form_FORM_ID_alter() for config single export form.
 */
function webform_devel_form_config_single_export_form_alter(&$form, FormStateInterface $form_state) {
  $form['export']['#type'] = 'webform_codemirror';
  $form['export']['#mode'] = 'yaml';

  $form['config_name']['#ajax']['callback'] = '_webform_devel_form_config_single_export_form_update_export';
}

/**
 * Handles switching the export textarea and tidies exported MSK configuration.
 *
 * Copied from: \Drupal\config\Form\ConfigSingleExportForm::updateExport.
 */
function _webform_devel_form_config_single_export_form_update_export($form, FormStateInterface $form_state) {
  // Determine the full config name for the selected config entity.
  if ($form_state->getValue('config_type') !== 'system.simple') {
    $definition = \Drupal::entityTypeManager()->getDefinition($form_state->getValue('config_type'));
    $name = $definition->getConfigPrefix() . '.' . $form_state->getValue('config_name');
  }
  // The config name is used directly for simple configuration.
  else {
    $name = $form_state->getValue('config_name');
  }

  // Read the raw data for this config name, encode it, and display it.
  $value = Yaml::encode(\Drupal::service('config.storage')->read($name));

  // Tidy all only Webform exported configurationâ€¦for now.
  if (strpos($name, 'webform') === 0) {
    $value = WebformYaml::tidy($value);
  }

  $form['export']['#type'] = 'webform_codemirror';
  $form['export']['#mode'] = 'yaml';
  $form['export']['#description'] = t('Filename: %name', ['%name' => $name . '.yml']);
  $form['export']['#value'] = $value;

  return $form['export'];
}
