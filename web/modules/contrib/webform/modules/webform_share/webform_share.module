<?php

/**
 * @file
 * Allows webforms to be shared on other websites using an iframe.
 */

use Drupal\Core\Hook\Attribute\LegacyHook;
use Drupal\webform_share\Hook\WebformShareHooks;
use Drupal\Component\Utility\NestedArray;
use Drupal\Core\Cache\RefinableCacheableDependencyInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Render\Markup;
use Drupal\webform_share\WebformShareHelper;

/**
 * Implements hook_webform_help_info().
 */
#[LegacyHook]
function webform_share_webform_help_info() {
  return \Drupal::service(WebformShareHooks::class)->webformHelpInfo();
}

/**
 * Implements hook_local_tasks_alter().
 */
#[LegacyHook]
function webform_share_local_tasks_alter(&$local_tasks) {
  \Drupal::service(WebformShareHooks::class)->localTasksAlter($local_tasks);
}

/**
 * Implements hook_menu_local_tasks_alter().
 */
#[LegacyHook]
function webform_share_menu_local_tasks_alter(&$data, $route_name, RefinableCacheableDependencyInterface $cacheability) {
  \Drupal::service(WebformShareHooks::class)->menuLocalTasksAlter($data, $route_name, $cacheability);
}

/**
 * Implements hook_element_info_alter().
 */
#[LegacyHook]
function webform_share_element_info_alter(&$type) {
  \Drupal::service(WebformShareHooks::class)->elementInfoAlter($type);
}

/**
 * Implements hook_entity_type_alter().
 */
#[LegacyHook]
function webform_share_entity_type_alter(array &$entity_types) {
  \Drupal::service(WebformShareHooks::class)->entityTypeAlter($entity_types);
}

/**
 * Implements hook_entity_operation().
 */
#[LegacyHook]
function webform_share_entity_operation(EntityInterface $entity) {
  return \Drupal::service(WebformShareHooks::class)->entityOperation($entity);
}

/**
 * Implements hook_page_top().
 */
#[LegacyHook]
function webform_share_page_top(array &$page_top) {
  return \Drupal::service(WebformShareHooks::class)->pageTop($page_top);
}

/* ************************************************************************** */
// Theme functions.
/* ************************************************************************** */

/**
 * Implements hook_theme().
 */
#[LegacyHook]
function webform_share_theme($existing, $type, $theme, $path) {
  return \Drupal::service(WebformShareHooks::class)->theme($existing, $type, $theme, $path);
}

/**
 * Implements hook_theme_suggestions_HOOK().
 */
#[LegacyHook]
function webform_share_theme_suggestions_html(array $variables) {
  return \Drupal::service(WebformShareHooks::class)->themeSuggestionsHtml($variables);
}

/**
 * Implements hook_theme_suggestions_HOOK().
 */
#[LegacyHook]
function webform_share_theme_suggestions_page(array $variables) {
  return \Drupal::service(WebformShareHooks::class)->themeSuggestionsPage($variables);
}

/**
 * Prepares variables for the webform share page HTML templates.
 */
function template_preprocess_html__webform_share(&$variables) {
  // Make sure the variables are preprocessed.
  // @see template_preprocess_page()
  if (!isset($variables['page'])) {
    template_preprocess_html($variables);
  }

  /** @var \Drupal\webform\WebformInterface $webform */
  $webform = \Drupal::routeMatch()->getParameter('webform');

  // Add html.webform-share-page-html class.
  $variables['html_attributes']->addClass('webform-share-page-html');

  // Add body.webform-share-page-body class.
  // @see webform_share.page.css
  $variables['attributes'] += ['class' => []];
  $variables['attributes']['class'][] = 'webform-share-page-body';

  // Add custom page body attributes.
  $body_attributes = $webform->getSetting('share_page_body_attributes');
  if (isset($body_attributes['class'])) {
    $variables['attributes']['class'] = array_merge($variables['attributes']['class'], $body_attributes['class']);
    unset($body_attributes['class']);
  }
  $variables['attributes'] = $body_attributes + $variables['attributes'];

  // Remove toolbar.module body classes.
  // @see toolbar_preprocess_html()
  if (\Drupal::currentUser()->hasPermission('access toolbar')) {
    foreach ($variables['attributes']['class'] as $index => $class_name) {
      if (strpos($class_name, 'toolbar-') === 0) {
        unset($variables['attributes']['class'][$index]);
      }
    }
    $variables['attributes']['class'] = array_values($variables['attributes']['class']);
  }

  // Remove the page title.
  if (!$webform->getSetting('share_title')) {
    NestedArray::unsetValue($variables, ['page', 'content', 'page_title']);
  }
}

/**
 * Prepares variables for the webform share page templates.
 */
function template_preprocess_page__webform_share(&$variables) {
  // Make sure the variables are preprocessed.
  // @see template_preprocess_page()
  if (!isset($variables['base_path'])) {
    template_preprocess_page($variables);
  }
}

/**
 * Implements hook_preprocess_HOOK() for page title templates.
 */
function webform_share_preprocess_page_title(&$variables) {
  if (!WebformShareHelper::isPage()) {
    return;
  }

  // Remove shortcut widget from page title.
  // @see shortcut_preprocess_page_title()
  if (isset($variables['title_suffix'])) {
    unset($variables['title_suffix']['add_or_remove_shortcut']);
  }
}

/**
 * Prepares variables for webform share iframe templates.
 *
 * Default template: webform-share-iframe.html.twig.
 *
 * @param array $variables
 *   An associative array containing:
 *   - element: An associative array containing the properties of the element.
 *     Properties used: #webform, #javascript, #options, and #attributes.
 */
function template_preprocess_webform_share_iframe(array &$variables) {
  $element = $variables['element'];

  // Set javascript.
  $variables['javascript'] = $element['#javascript'];

  // Set iframe-resizer script options.
  $variables['script'] = $element['#script'];
  $options = json_encode($element['#options'], JSON_FORCE_OBJECT);
  $variables['options'] = Markup::create($options);
}

/**
 * Prepares variables for webform share script templates.
 *
 * Default template: webform-share-script.html.twig.
 *
 * @param array $variables
 *   An associative array containing:
 *   - element: An associative array containing the properties of the element.
 *     Properties used: #webform, #javascript, #options, and #attributes.
 */
function template_preprocess_webform_share_script(array &$variables) {
  $element = $variables['element'];
  $variables['script'] = $element['#script'];
}
